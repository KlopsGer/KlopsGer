#include <stdio.h>
#include <windows.h>
#include <conio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#define n 0 /*местоположение стакана, для настройки интерфейса*/
#define m 0

void strelka_New_Game()
{
    COORD position;
    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
    while(1)
    {
        char prikaz;
        position.X = 0;
        position.Y = 0;
        SetConsoleCursorPosition(hConsole, position);
        SetConsoleTextAttribute(hConsole, (WORD) ((1 << 4) | 1));
        prikaz = getche();
        SetConsoleTextAttribute(hConsole, (WORD) ((1 << 4) | 14));
        printf("\b ");
        switch(prikaz)
        {
            case 's':{
                position.X = 26;
                position.Y = 3;
                SetConsoleCursorPosition(hConsole, position);
                printf("\b   ");
                position.X = 26;
                position.Y = 4;
                SetConsoleCursorPosition(hConsole, position);
                printf("->");
                strelka_Setting();
            }

            case 'w': {
                position.X = 26;
                position.Y = 3;
                SetConsoleCursorPosition(hConsole, position);
                printf("\b   ");
                position.X = 26;
                position.Y = 5;
                SetConsoleCursorPosition(hConsole, position);
                printf("->");
                strelka_Exit();
            }

            case ' ': new_game();
        }
    }
}

void strelka_Setting()
{
    COORD position;
    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
    while(1)
    {
        char prikaz;
        position.X = 0;
        position.Y = 0;
        SetConsoleCursorPosition(hConsole, position);
        SetConsoleTextAttribute(hConsole, (WORD) ((1 << 4) | 1));
        prikaz = getche();
        SetConsoleTextAttribute(hConsole, (WORD) ((1 << 4) | 14));
        printf("\b ");
        switch(prikaz)
        {
            case 'w':{
                position.X = 26;
                position.Y = 4;
                SetConsoleCursorPosition(hConsole, position);
                printf("\b   ");
                position.X = 26;
                position.Y = 3;
                SetConsoleCursorPosition(hConsole, position);
                printf("->");
                strelka_New_Game();
            }

            case 's':{
                position.X = 26;
                position.Y = 4;
                SetConsoleCursorPosition(hConsole, position);
                printf("\b   ");
                position.X = 26;
                position.Y = 5;
                SetConsoleCursorPosition(hConsole, position);
                printf("->");
                strelka_Exit();
            }
        }
    }
}

void strelka_Exit()
{
    COORD position;
    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
    while(1)
    {
        char prikaz;
        position.X = 0;
        position.Y = 0;
        SetConsoleCursorPosition(hConsole, position);
        SetConsoleTextAttribute(hConsole, (WORD) ((1 << 4) | 1));
        prikaz = getche();
        SetConsoleTextAttribute(hConsole, (WORD) ((1 << 4) | 14));
        printf("\b ");
        switch(prikaz)
        {
            case 'w':{
                position.X = 26;
                position.Y = 5;
                SetConsoleCursorPosition(hConsole, position);
                printf("\b   ");
                position.X = 26;
                position.Y = 4;
                SetConsoleCursorPosition(hConsole, position);
                printf("->");
                strelka_Setting();
            }

            case 's':{
                position.X = 26;
                position.Y = 5;
                SetConsoleCursorPosition(hConsole, position);
                printf("\b   ");
                position.X = 26;
                position.Y = 3;
                SetConsoleCursorPosition(hConsole, position);
                printf("->");
                strelka_New_Game();
            }

            case ' ': {
                position.X = 0;
                position.Y = 10;
                SetConsoleCursorPosition(hConsole, position);
                exit(0);
            }
        }
    }
}

int main()
{
    char title[] = " TETRIS ";
    CharToOem(title, title);
    SetConsoleTitle(title);
    COORD position;
    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
    system("color 1E");
    position.X = 32;
    position.Y = 2;
    SetConsoleCursorPosition(hConsole, position);
    SetConsoleTextAttribute(hConsole, (WORD) ((1 << 4) | 4));
    printf("T");
    SetConsoleTextAttribute(hConsole, (WORD) ((1 << 4) | 2));
    printf("E");
    SetConsoleTextAttribute(hConsole, (WORD) ((1 << 4) | 14));
    printf("T");
    SetConsoleTextAttribute(hConsole, (WORD) ((1 << 4) | 5));
    printf("R");
    SetConsoleTextAttribute(hConsole, (WORD) ((1 << 4) | 13));
    printf("I");
    SetConsoleTextAttribute(hConsole, (WORD) ((1 << 4) | 11));
    printf("S");
    SetConsoleTextAttribute(hConsole, (WORD) ((1 << 4) | 14));
    position.X = 30;
    position.Y = 3;
    SetConsoleCursorPosition(hConsole, position);
    printf("NEW GAMES");
    position.X = 30;
    position.Y = 4;
    SetConsoleCursorPosition(hConsole, position);
    printf("SETTING");
    position.X = 30;
    position.Y = 5;
    SetConsoleCursorPosition(hConsole, position);
    printf("EXIT");
    position.X = 30;
    position.Y = 7;
    SetConsoleCursorPosition(hConsole, position);
    printf("Team Z");
    position.X = 26;
    position.Y = 3;
    SetConsoleCursorPosition(hConsole, position);
    printf("->");
    strelka_New_Game();
}

void new_game()
{
    COORD position;
    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
    position.X = 24;
    position.Y = 2;
    SetConsoleCursorPosition(hConsole, position);
    printf("                 ");
    position.X = 24;
    position.Y = 3;
    SetConsoleCursorPosition(hConsole, position);
    printf("                 ");
    position.X = 24;
    position.Y = 4;
    SetConsoleCursorPosition(hConsole, position);
    printf("                 ");
    position.X = 24;
    position.Y = 5;
    SetConsoleCursorPosition(hConsole, position);
    printf("                 ");
    position.X = 24;
    position.Y = 7;
    SetConsoleCursorPosition(hConsole, position);
    printf("                 ");

    /*размещаем стакан*/
    int i, j;
    position.X = 3+n;
    position.Y = 0+m;
    SetConsoleCursorPosition(hConsole, position);
    char k[22][23]={'1', '1','1', '1', '1', '1', '1', '1', '1', '1', '1', '1','1','1', '1', '1', '1', '1', '1', '1', '1', '1','1',
                    '0', '0', '0','0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '0', '0', '0','0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '0', '0', '0','0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '0', '0', '0','0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '0', '0', '0','0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '0', '0','0', '0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '2', '0','0', '0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '2', '0','0', '0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '2', '2','2', '0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '2', '2','2', '0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '2', '0','0', '0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '2', '0','0', '0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '0', '0','0', '0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '0', '0','0', '0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '0', '0','0', '0', '0', '0', '0', '0', '0', '0', '0','0', '0','0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '0', '0','0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '0', '0','0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '0', '0','0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '0', '0','0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '0', '0','0', '0', '0', '0', '0', '0', '0', '0', '0','0','0', '0', '0', '0', '0', '0', '0', '0', '0', '0','1',
                    '1', '1','1', '1', '1', '1', '1', '1', '1', '1', '1','1','1', '1', '1', '1', '1', '1', '1', '1', '1', '1','1',
                    };
    int f=0;
    for (j = 0; j < 23; ++j){
        for (i = 0; i < 22; ++i){
            SetConsoleTextAttribute(hConsole, (WORD) ((0 << 4) | 2));
                if ((position.Y==0+m)||(position.Y == 1+m)||(position.Y == 22+m)||(position.X == 3+m)||(position.X == 24+m)) SetConsoleTextAttribute(hConsole, (WORD) ((1 << 4) | 14));
                if (k[i][j]=='2') SetConsoleTextAttribute(hConsole, (WORD) ((2 << 4) | 2));
            printf("%c", k[i][j]);
            position.X++;
        }
    SetConsoleTextAttribute(hConsole, (WORD) ((1 << 4) | 14));
    f++;
    position.X = 3+n;
    position.Y = m+f;
    SetConsoleCursorPosition(hConsole, position);
    }
    time_t tmp1, tmp2, tmpf;
    time(&tmp1);
    tmpf=tmp1;
    while(1){
            if (difftime(tmp2,tmp1) > 1) {
                    tmp1=tmp2;}
        position.X = 0+n;
        position.Y = 0+m;
        SetConsoleCursorPosition(hConsole, position);
        time(&tmp2);
        if (difftime(tmp2,tmp1) == 1){
            position.X = 30+n;
            position.Y = 3+m;
            SetConsoleCursorPosition(hConsole, position);
            tmp1=tmp2;
            printf("%5d", tmp2-tmpf);
            if (tmp2==tmp1){
                f=0;
                for (j = 22; j >= 0; --j){
                    for (i = 1; i < 21; ++i){
                        if(k[i][j]=='2'){
                            if (k[i][j+1]=='1')
                                f++;
                        }
                    }
                }



                if(f==0){
                    for (j = 22; j >= 0; --j){
                        for (i = 1; i < 21; ++i){
                            if(k[i][j]=='2'){
                                k[i][j+1]=k[i][j];
                                k[i][j]='0';
                            }
                        }
                    }
                }
                else{
                    for (j = 22; j >= 0; --j){
                        for (i = 1; i < 21; ++i){
                            if(k[i][j]=='2') k[i][j]='1';
                        }
                    }
                }

                position.X = 4+n;
                position.Y = 0+m;
                SetConsoleCursorPosition(hConsole, position);

                f=0;
                for (j = 0; j < 22; ++j){
                    for (i = 1; i < 21; ++i){
                        SetConsoleTextAttribute(hConsole, (WORD) ((0 << 4) | 2));
                        if ((position.Y==0+m)||(position.Y == 1+m)||
                            (position.Y == 22+m)||(position.X == 3+n)||
                            (position.X == 24+n)) SetConsoleTextAttribute(hConsole, (WORD) ((1 << 4) | 14));
                            if (k[i][j]=='2') SetConsoleTextAttribute(hConsole, (WORD) ((2 << 4) | 2));
                            if (k[i][j]=='1') SetConsoleTextAttribute(hConsole, (WORD) ((2 << 4) | 2));
                        printf("%c", k[i][j]);
                        position.X++;
                    }
                    SetConsoleTextAttribute(hConsole, (WORD) ((1 << 4) | 14));
                    f++;
                    position.X = 4+n;
                    position.Y = m+f;
                    SetConsoleCursorPosition(hConsole, position);
                }
                f=0;
                for (j = 22; j >= 0; --j){
                    for (i = 1; i < 21; ++i){
                        if(k[i][j]=='2')f++;
                    }
                }

                if(f==0){k[5][0]='2';
                    k[6][0]='2';
                    k[7][0]='2';
                    k[8][0]='2';
                    k[9][0]='2';
                    k[10][0]='2';
                    k[9][1]='2';
                    k[10][1]='2';
                    k[5][1]='2';
                    k[6][1]='2';
                }


                for(i=1;i<21;i++){
                    if (k[i][2]=='1'){ main();}
                }
            }
        }
    }
}
